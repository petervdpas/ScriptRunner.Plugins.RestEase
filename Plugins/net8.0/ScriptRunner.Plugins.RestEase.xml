<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScriptRunner.Plugins.RestEase</name>
    </assembly>
    <members>
        <member name="T:ScriptRunner.Plugins.RestEase.AuthenticatorFactory">
            <summary>
                Factory class for creating instances of authenticators based on the specified authentication type.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.AuthenticatorFactory.CreateAuthenticator(System.String,System.Object)">
            <summary>
                Creates an authenticator instance based on the specified authentication type.
            </summary>
            <param name="authType">The type of authentication (e.g., "none", "bearer", "basic", "oauth2").</param>
            <param name="options">
                Optional parameters required for the specific authentication type:
                - "bearer": A string token.
                - "basic": A tuple (username, password).
                - "Oauth2": A tuple (tokenUrl, clientId, clientSecret, scope).
            </param>
            <returns>An instance of <see cref="T:ScriptRunner.Plugins.RestEase.Interfaces.IAuthenticator" /> configured for the specified authentication type.</returns>
            <exception cref="T:System.ArgumentException">Thrown when an unsupported authentication type is specified or options are invalid.</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.AuthenticatorFactory.CreateBearerTokenAuthenticator(System.Object)">
            <summary>
                Creates a bearer token authenticator.
            </summary>
            <param name="options">The bearer token string.</param>
            <returns>An instance of <see cref="T:ScriptRunner.Plugins.RestEase.Interfaces.IAuthenticator" /> configured with the specified bearer token.</returns>
            <exception cref="T:System.ArgumentException">Thrown when options is not a valid bearer token string.</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.AuthenticatorFactory.CreateBasicAuthenticator(System.Object)">
            <summary>
                Creates a basic authenticator.
            </summary>
            <param name="options">A tuple (username, password) for basic authentication.</param>
            <returns>An instance of <see cref="T:ScriptRunner.Plugins.RestEase.Interfaces.IAuthenticator" /> configured with the specified username and password.</returns>
            <exception cref="T:System.ArgumentException">Thrown when options is not a valid tuple (username, password).</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.AuthenticatorFactory.CreateOAuth2Authenticator(System.Object)">
            <summary>
                Creates an OAuth2 authenticator.
            </summary>
            <param name="options">
                A tuple (tokenUrl, clientId, clientSecret, scope) for OAuth2 client credentials authentication:
                - tokenUrl: The URL to retrieve the OAuth2 token.
                - clientId: The client ID.
                - clientSecret: The client secret.
                - scope: The scope of the access token.
            </param>
            <returns>An instance of <see cref="T:ScriptRunner.Plugins.RestEase.Interfaces.IAuthenticator" /> configured for OAuth2 authentication.</returns>
            <exception cref="T:System.ArgumentException">Thrown when options is not a valid tuple (tokenUrl, clientId, clientSecret, scope).</exception>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Authenticators.BasicAuthenticator">
            <summary>
                An authenticator that uses Basic Authentication to add an Authorization header to HTTP requests.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Authenticators.BasicAuthenticator.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:ScriptRunner.Plugins.RestEase.Authenticators.BasicAuthenticator" /> class.
            </summary>
            <param name="username">The username for Basic Authentication.</param>
            <param name="password">The password for Basic Authentication.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Authenticators.BasicAuthenticator.AuthenticateAsync(RestSharp.RestRequest)">
            <summary>
                Adds a Basic Authentication header to the specified HTTP request.
            </summary>
            <param name="request">The HTTP request to which the Authorization header will be added.</param>
            <returns>A completed <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Authenticators.BearerTokenAuthenticator">
            <summary>
                An authenticator that adds a Bearer token to the Authorization header of HTTP requests.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Authenticators.BearerTokenAuthenticator.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:ScriptRunner.Plugins.RestEase.Authenticators.BearerTokenAuthenticator" /> class.
            </summary>
            <param name="token">The Bearer token to be used for authentication.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Authenticators.BearerTokenAuthenticator.AuthenticateAsync(RestSharp.RestRequest)">
            <summary>
                Adds the Bearer token to the Authorization header of the specified HTTP request.
            </summary>
            <param name="request">The HTTP request to which the Authorization header will be added.</param>
            <returns>A completed <see cref="T:System.Threading.Tasks.Task" />.</returns>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Authenticators.NoAuthenticator">
            <summary>
                An authenticator that performs no authentication.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Authenticators.NoAuthenticator.AuthenticateAsync(RestSharp.RestRequest)">
            <summary>
                Performs no authentication on the specified HTTP request.
            </summary>
            <param name="request">The HTTP request to be processed (no modifications will be made).</param>
            <returns>A completed <see cref="T:System.Threading.Tasks.Task" /> indicating no authentication was performed.</returns>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Authenticators.OAuth2Authenticator">
            <summary>
                An authenticator that uses OAuth2 Client Credentials flows to get and manage access tokens.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Authenticators.OAuth2Authenticator.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:ScriptRunner.Plugins.RestEase.Authenticators.OAuth2Authenticator" /> class.
            </summary>
            <param name="tokenUrl">The URL to retrieve the OAuth2 token.</param>
            <param name="clientId">The client ID for OAuth2 authentication.</param>
            <param name="clientSecret">The client secret for OAuth2 authentication.</param>
            <param name="scope">The scope of the access token.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Authenticators.OAuth2Authenticator.AuthenticateAsync(RestSharp.RestRequest)">
            <summary>
                Adds an OAuth2 Bearer token to the Authorization header of the specified HTTP request.
            </summary>
            <param name="request">The HTTP request to which the Authorization header will be added.</param>
            <returns>A task that represents the asynchronous authentication operation.</returns>
            <exception cref="T:System.Exception">Thrown when the token request fails or the token is null.</exception>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Enums.AuthenticationType">
            <summary>
                Specifies the types of authentication supported by the REST client.
            </summary>
        </member>
        <member name="F:ScriptRunner.Plugins.RestEase.Enums.AuthenticationType.None">
            <summary>
                No authentication is required.
            </summary>
        </member>
        <member name="F:ScriptRunner.Plugins.RestEase.Enums.AuthenticationType.BearerToken">
            <summary>
                Bearer token authentication (e.g., OAuth2 access token).
            </summary>
        </member>
        <member name="F:ScriptRunner.Plugins.RestEase.Enums.AuthenticationType.ApiKey">
            <summary>
                API key authentication, typically passed in headers or query parameters.
            </summary>
        </member>
        <member name="F:ScriptRunner.Plugins.RestEase.Enums.AuthenticationType.Basic">
            <summary>
                Basic authentication using a username and password.
            </summary>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Interfaces.IAuthenticator">
            <summary>
            Represents an authenticator for adding authentication details to HTTP requests.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IAuthenticator.AuthenticateAsync(RestSharp.RestRequest)">
            <summary>
            Authenticates the specified HTTP request by adding necessary authentication headers or parameters.
            </summary>
            <param name="request">The HTTP request to be authenticated.</param>
            <returns>A task that represents the asynchronous operation of authenticating the request.</returns>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase">
            <summary>
            Interface for a REST client service that supports configurable base URL, authentication, and HTTP methods.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase.SetBaseUrl(System.String)">
            <summary>
            Sets the base URL for the REST client.
            </summary>
            <param name="baseUrl">The base URL for the REST API.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase.SetAuthentication(System.String,System.Object)">
            <summary>
            Configures the authentication type for the REST client.
            </summary>
            <param name="authType">The type of authentication (e.g., "bearer", "basic", "oauth2").</param>
            <param name="authOptions">Optional parameters required for the specified authentication type. Can be null.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes the REST client with the specified configuration settings.
            </summary>
            <param name="configuration">
            A dictionary containing key-value pairs for configuration settings, such as timeouts or default headers.
            </param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase.GetAsync(System.String)">
            <summary>
            Executes a GET request to the specified resource.
            </summary>
            <param name="resource">The resource endpoint.</param>
            <returns>A task representing the asynchronous operation, returning a <see cref="T:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse"/>.</returns>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase.PostAsync(System.String,System.Object)">
            <summary>
            Executes a POST request to the specified resource with a body.
            </summary>
            <param name="resource">The resource endpoint.</param>
            <param name="body">The body of the request.</param>
            <returns>A task representing the asynchronous operation, returning a <see cref="T:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse"/>.</returns>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase.PutAsync(System.String,System.Object)">
            <summary>
            Executes a PUT request to the specified resource with a body.
            </summary>
            <param name="resource">The resource endpoint.</param>
            <param name="body">The body of the request.</param>
            <returns>A task representing the asynchronous operation, returning a <see cref="T:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse"/>.</returns>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Interfaces.IRestEase.DeleteAsync(System.String)">
            <summary>
            Executes a DELETE request to the specified resource.
            </summary>
            <param name="resource">The resource endpoint.</param>
            <returns>A task representing the asynchronous operation, returning a <see cref="T:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse"/>.</returns>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse">
            <summary>
            Represents a response from a RESTful API request.
            </summary>
        </member>
        <member name="P:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse.StatusCode">
            <summary>
            Gets or sets the HTTP status code returned by the API.
            </summary>
        </member>
        <member name="P:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse.Content">
            <summary>
            Gets or sets the content of the response body.
            </summary>
        </member>
        <member name="P:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse.IsSuccess">
            <summary>
            Gets or sets a value indicating whether the API request was successful.
            </summary>
        </member>
        <member name="P:ScriptRunner.Plugins.RestEase.Models.RestEaseResponse.Headers">
            <summary>
            Gets or sets the collection of headers included in the API response.
            </summary>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.Plugin">
            <summary>
            A plugin that registers and provides a restful client.
            </summary>
            <remarks>
            This plugin demonstrates how to register a service with the host application's DI container.
            </remarks>
        </member>
        <member name="P:ScriptRunner.Plugins.RestEase.Plugin.Name">
            <summary>
            Gets the name of the plugin.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Plugin.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes the plugin with the provided configuration.
            </summary>
            <param name="configuration">A dictionary containing key-value pairs for the plugin's configuration.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Plugin.Execute">
            <summary>
            Executes the plugin's main functionality.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.Plugin.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers the plugin's services into the application's dependency injection container.
            </summary>
            <param name="services">The service collection to register the plugin's services into.</param>
        </member>
        <member name="T:ScriptRunner.Plugins.RestEase.RestEase">
            <summary>
                Provides a REST client service for executing HTTP requests with optional dynamic authentication.
            </summary>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.SetBaseUrl(System.String)">
            <summary>
                Sets the base URL for the REST client.
            </summary>
            <param name="baseUrl">The base URL for the REST API.</param>
            <exception cref="T:System.ArgumentException">Thrown when the provided base URL is null or empty.</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.SetAuthentication(System.String,System.Object)">
            <summary>
                Configures the authentication type for the REST client.
            </summary>
            <param name="authType">The type of authentication (e.g., "bearer", "basic", "oauth2").</param>
            <param name="authOptions">Optional parameters required for the specified authentication type. Can be null.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                Initializes the RestEase service with configuration settings.
            </summary>
            <param name="configuration">A dictionary containing configuration settings for the REST client.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.GetAsync(System.String)">
            <summary>
                Executes a GET request to the specified resource.
            </summary>
            <param name="resource">The resource endpoint relative to the base URL.</param>
            <returns>The HTTP response from the GET request.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the base URL has not been set.</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.PostAsync(System.String,System.Object)">
            <summary>
                Executes a POST request to the specified resource with the provided body.
            </summary>
            <param name="resource">The resource endpoint relative to the base URL.</param>
            <param name="body">The data to be sent in the request body.</param>
            <returns>The HTTP response from the POST request.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the base URL has not been set.</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.PutAsync(System.String,System.Object)">
            <summary>
                Executes a PUT request to the specified resource with the provided body.
            </summary>
            <param name="resource">The resource endpoint relative to the base URL.</param>
            <param name="body">The data to be sent in the request body.</param>
            <returns>The HTTP response from the PUT request.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the base URL has not been set.</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.DeleteAsync(System.String)">
            <summary>
                Executes a DELETE request to the specified resource.
            </summary>
            <param name="resource">The resource endpoint relative to the base URL.</param>
            <returns>The HTTP response from the DELETE request.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the base URL has not been set.</exception>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.ConvertToRestEaseResponse(RestSharp.RestResponse)">
            <summary>
                Converts a RestSharp response to a RestEaseResponse.
            </summary>
            <param name="response">The RestSharp response to convert.</param>
            <returns>A RestEaseResponse instance with the mapped data.</returns>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.AuthenticateRequestAsync(RestSharp.RestRequest)">
            <summary>
                Authenticates the HTTP request using the configured authenticator.
            </summary>
            <param name="request">The HTTP request to be authenticated.</param>
        </member>
        <member name="M:ScriptRunner.Plugins.RestEase.RestEase.EnsureClientInitialized">
            <summary>
                Ensures the REST client has been initialized with a base URL.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the base URL is not set.</exception>
        </member>
    </members>
</doc>
