<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>disable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <DocumentationFile>..\Plugins\$(AssemblyName).xml</DocumentationFile>
        <RootNamespace>ScriptRunner.Plugins.RestEase</RootNamespace>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="IdentityModel" Version="7.0.0"/>
        <PackageReference Include="RestSharp" Version="112.1.0"/>
        <PackageReference Include="ScriptRunner.Plugins" Version="1.6.30" />
    </ItemGroup>
    
    <!-- Separate Plugin DLL and Dependencies -->
    <Target Name="SeparatePluginAndDependencies" AfterTargets="Build">

        <!-- Ensure Dependencies subdirectory exists -->
        <MakeDir Directories="..\Plugins" />

        <!-- Recursively Copy EVERYTHING from $(TargetDir), including subdirectories -->
        <ItemGroup>
            <AllFiles Include="$(TargetDir)**\*" />
        </ItemGroup>

        <!-- Recursively Copy Files While Preserving Directory Structure -->
        <Copy SourceFiles="@(AllFiles)"
              DestinationFiles="..\Plugins\%(RecursiveDir)%(Filename)%(Extension)"
              SkipUnchangedFiles="false" />

        <!-- Copy DemoScripts and CookBooks to the Plugins directory -->
        <ItemGroup>
            <DemoScripts Include="$(ProjectDir)DemoScripts\**\*" />
            <CookBookPages Include="$(ProjectDir)CookBookPages\**\*" />
        </ItemGroup>

        <Copy SourceFiles="@(DemoScripts)"
              DestinationFolder="..\Plugins\DemoScripts"
              SkipUnchangedFiles="true" />

        <Copy SourceFiles="@(CookBookPages)"
              DestinationFolder="..\Plugins\CookBookPages"
              SkipUnchangedFiles="true" />

        <!-- Check if PowerShell is available -->
        <Exec Command="powershell -File CheckPowerShell.ps1"
              IgnoreExitCode="true"
              StandardOutputImportance="high"
              StandardErrorImportance="high">
            <Output TaskParameter="ExitCode" PropertyName="PowerShellAvailable" />
        </Exec>

        <!-- Define Compression and Cleanup Commands -->
        <PropertyGroup>
            <CompressionCommand Condition="'$(PowerShellAvailable)' == '0'">
                powershell -Command &quot;Compress-Archive -Path '..\Plugins\*' -DestinationPath '..\Plugins\$(AssemblyName).Plugin.zip' -Force&quot;
            </CompressionCommand>
            <CleanupCommand Condition="'$(PowerShellAvailable)' == '0'">
                powershell -Command &quot;Get-ChildItem -Path '..\Plugins' -Exclude '$(AssemblyName).Plugin.zip' | Remove-Item -Recurse -Force&quot;
            </CleanupCommand>
            <NotifyCommand Condition="'$(PowerShellAvailable)' != '0'">
                echo PowerShell is not available. Please ensure PowerShell is installed and accessible in the PATH.
            </NotifyCommand>
        </PropertyGroup>

        <!-- Execute Compression and Cleanup if PowerShell is available -->
        <Exec Command="$(CompressionCommand)" Condition="'$(PowerShellAvailable)' == '0'" />
        <Exec Command="$(CleanupCommand)" Condition="'$(PowerShellAvailable)' == '0'" />

        <!-- Notify the user if PowerShell is not available -->
        <Exec Command="$(NotifyCommand)" Condition="'$(PowerShellAvailable)' != '0'" />

    </Target>
    
</Project>
